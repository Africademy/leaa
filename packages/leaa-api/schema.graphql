# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AuthLoginInput {
  email: String!
  password: String!
}

input AuthRegisterInput {
  email: String!
  name: String!
  password: String!
}

input CreatePermissionInput {
  name: String!
  slug: String!
}

input CreateRoleInput {
  name: String!
  slug: String!
}

input CreateUserInput {
  phone: String
  email: String!
  name: String
  password: String!
  status: Float
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createRole(role: CreateRoleInput!): Role!
  updateRole(role: UpdateRoleInput!, id: Int!): Role!
  deleteRole(id: Int!): Role!
  createPermission(permission: CreatePermissionInput!): Permission!
  updatePermission(permission: UpdatePermissionInput!, id: Int!): Permission!
  deletePermission(id: Int!): Permission!
  createUser(user: CreateUserInput!): User!
  updateUser(user: UpdateUserInput!, id: Int!): User!
  deleteUser(id: Int!): User!
  login(user: AuthLoginInput!): User!
  register(user: AuthRegisterInput!): User!
}

type PaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
}

type Permission {
  id: Int!
  name: String!
  slug: String!
  roles: [Role!]
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
}

type PermissionsObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Permission!]!
}

type Query {
  roles(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "ASC", q: String): RolesObject!
  role(id: Int!): Role!
  permissions(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "ASC", q: String): PermissionsObject!
  permission(id: Int!): Permission!
  users(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "ASC", q: String): UsersObject!
  user(id: Int!): User!
}

type Role {
  id: Int!
  name: String!
  slug: String!
  permissions: [Permission!]
  user: User
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
}

type RolesObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Role!]!
}

input UpdatePermissionInput {
  name: String!
  slug: String!
}

input UpdateRoleInput {
  name: String
  slug: String
  permissionIds: [Int!]
  permissionSlugs: [String!]
}

input UpdateUserInput {
  phone: String
  email: String
  name: String
  password: String
  status: Float
  roleIds: [Int!]
  roleSlugs: [String!]
}

type User {
  id: Int!
  name: String
  phone: String!
  email: String!
  status: Float!
  last_login_ip: String!
  last_login_at: DateTime!
  roles: [Role!]
  permissions: [Permission!]
  flatePermissions: [String!]
  authToken: String
  authExpiresIn: Float
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
}

type UsersObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [User!]!
}
