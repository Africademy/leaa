# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Article {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  title: String!
  slug: String
  categoryId: Int
  userId: Int
  description: String
  content: String
  status: Int
  category: Category
}

type ArticlesWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Article!]!
}

type Attachment {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  uuid: String!
  title: String!
  alt: String!
  type: String!
  filename: String!
  description: String
  link: String
  moduleName: String!
  moduleId: Int!
  moduleType: String!
  ext: String!
  width: Int!
  height: Int!
  size: Int!
  path: String!
  at2x: Int!
  inLocal: Int!
  inCloud: Int!
  categoryId: Int
  userId: Int
  sort: Int!
  status: Int!
}

type AttachmentsObject {
  items: [Attachment!]!
}

type AttachmentsWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Attachment!]!
}

input AuthLoginInput {
  email: String!
  password: String!
}

input AuthRegisterInput {
  email: String!
  name: String!
  password: String!
}

type Ax {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  title: String!
  slug: String
  description: String
  status: Int
  attachments: AxAttachmentsObject
}

type AxAttachmentsObject {
  bannerMbList: [Attachment!]!
  bannerPcList: [Attachment!]!
  galleryMbList: [Attachment!]!
  galleryPcList: [Attachment!]!
}

type AxsWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Ax!]!
}

type Base {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
}

type CategoriesWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Category!]!
}

type Category {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  name: String!
  slug: String!
  parentId: Int!
  description: String
}

input CreateArticleInput {
  title: String!
  slug: String
  categoryId: Int
  userId: Int
  description: String
  content: String
  status: Int!
}

input CreateAttachmentInput {
  uuid: String!
  title: String!
  alt: String!
  type: String!
  filename: String!
  moduleName: String!
  moduleId: Int!
  moduleType: String!
  ext: String!
  width: Int!
  height: Int!
  size: Int!
  path: String!
  at2x: Int!
  inLocal: Int!
  inCloud: Int
  categoryId: Int
  userId: Int
  sort: Int!
  status: Int!
}

input CreateAxInput {
  title: String!
  slug: String!
  status: Int!
  description: String
}

input CreateCategoryInput {
  name: String!
  slug: String!
  parentId: Int
  description: String
}

input CreatePermissionInput {
  name: String!
  slug: String!
}

input CreateRoleInput {
  name: String!
  slug: String!
}

input CreateUserInput {
  phone: String
  email: String!
  name: String
  password: String!
  status: Int
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type DeleteAttachmentsObject {
  items: [String!]!
}

type Mutation {
  createRole(role: CreateRoleInput!): Role!
  updateRole(role: UpdateRoleInput!, id: Int!): Role!
  deleteRole(id: Int!): Role!
  createPermission(permission: CreatePermissionInput!): Permission!
  updatePermission(permission: UpdatePermissionInput!, id: Int!): Permission!
  deletePermission(id: Int!): Permission!
  createUser(user: CreateUserInput!): User!
  updateUser(user: UpdateUserInput!, id: Int!): User!
  deleteUser(id: Int!): User!
  createArticle(article: CreateArticleInput!): Article!
  updateArticle(article: UpdateArticleInput!, id: Int!): Article!
  deleteArticle(id: Int!): Article!
  createCategory(category: CreateCategoryInput!): Category!
  updateCategory(category: UpdateCategoryInput!, id: Int!): Category!
  deleteCategory(id: Int!): Category!
  createAx(ax: CreateAxInput!): Ax!
  updateAx(ax: UpdateAxInput!, id: Int!): Ax!
  deleteAx(id: Int!): Ax!
  updateAttachment(attachment: UpdateAttachmentInput!, uuid: String!): Attachment!
  updateAttachments(attachments: [UpdateAttachmentsInput!]!): AttachmentsObject!
  deleteAttachments(uuid: [String!]!): DeleteAttachmentsObject!
  login(user: AuthLoginInput!): User!
  register(user: AuthRegisterInput!): User!
}

type PaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
}

type Permission {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  name: String!
  slug: String!
  slugGroup: String!
  roles: [Role!]
}

type PermissionsWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Permission!]!
}

type Query {
  roles(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): RolesWithPaginationObject!
  role(id: Int!): Role!
  permissions(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): PermissionsWithPaginationObject!
  permission(id: Int!): Permission!
  ram: Float!
  users(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): UsersWithPaginationObject!
  user(id: Int!): User!
  userByToken(token: String!): User!
  articles(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): ArticlesWithPaginationObject!
  article(id: Int!): Article!
  categories(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): CategoriesWithPaginationObject!
  category(id: Int!): Category!
  axs(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): AxsWithPaginationObject!
  ax(id: Int!): Ax!
  axBySlug(slug: String!): Ax!
  attachments(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String, type: String, moduleName: String, moduleId: Int, moduleType: String, categoryId: Int, userId: Int, refreshHash: Int): AttachmentsWithPaginationObject!
  attachment(uuid: String!): Attachment!
}

type Role {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  name: String!
  slug: String!
  permissions: [Permission!]
  user: User
}

type RolesWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [Role!]!
}

input UpdateArticleInput {
  title: String!
  slug: String
  categoryId: Int
  userId: Int
  description: String
  content: String
  status: Int
}

input UpdateAttachmentInput {
  title: String
  link: String
  sort: Int!
  status: Int!
}

input UpdateAttachmentsInput {
  title: String
  link: String
  sort: Int!
  status: Int!
  uuid: String!
}

input UpdateAxInput {
  title: String
  slug: String
  status: Int
  description: String
}

input UpdateCategoryInput {
  name: String!
  slug: String!
  parentId: Int
  description: String
}

input UpdatePermissionInput {
  name: String
  slug: String
}

input UpdateRoleInput {
  name: String
  slug: String
  permissionIds: [Int!]
  permissionSlugs: [String!]
}

input UpdateUserInput {
  phone: String
  email: String
  name: String
  password: String
  status: Int
  roleIds: [Int!]
  roleSlugs: [String!]
}

type User {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
  name: String
  phone: String
  email: String!
  status: Int!
  lastLoginIp: String
  lastLoginAt: DateTime
  roles: [Role!]
  permissions: [Permission!]
  flatePermissions: [String!]
  authToken: String
  authExpiresIn: Int
}

type UsersWithPaginationObject {
  page: Int
  pageSize: Int!
  total: Int!
  items: [User!]!
}
