# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Article {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  title: String!
  slug: String
  user_id: Int
  description: String
  content: String
  status: Int
  categories: [Category!]
  tags: [Tag!]
}

type ArticlesWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Article!]!
}

type Attachment {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  uuid: String!
  title: String!
  alt: String!
  type: String!
  filename: String!
  description: String
  link: String
  module_name: String!
  module_id: Int!
  module_type: String!
  ext: String!
  width: Int!
  height: Int!
  size: Int!
  path: String!
  external_url: String!
  url: String
  urlAt2x: String
  at2x: Int!
  in_local: Int!
  in_oss: Int!
  category_id: Int
  user_id: Int
  sort: Int!
  status: Int!
}

type AttachmentsObject {
  items: [Attachment!]!
}

type AttachmentsWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Attachment!]!
}

input AuthLoginInput {
  email: String!
  password: String!
}

input AuthSignupInput {
  email: String!
  name: String!
  password: String!
}

type Ax {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  title: String!
  slug: String
  description: String
  status: Int
  attachments: AxAttachmentsObject
}

type AxAttachmentsObject {
  bannerMbList: [Attachment!]!
  bannerPcList: [Attachment!]!
  galleryMbList: [Attachment!]!
  galleryPcList: [Attachment!]!
}

type AxsWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Ax!]!
}

type Base {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
}

type CategoriesWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Category!]!
}

type CategoriesWithTreeObject {
  treeByStringify: String!
}

type Category {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  name: String!
  slug: String!
  parent_id: Int!
  description: String
  children: [Category!]
  key: String
}

type Coupon {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  code: String
  type: String!
  slug: String!
  amount: Float!
  promo_id: Int
  promo_code: String
  over_amount: Float!
  user_id: Int!
  order_id: Int
  order_serial: String
  available_product_ids: String
  unavailable_product_ids: String
  start_time: DateTime
  expire_time: DateTime
  convert_method: String
  creator_id: Int!
  status: Int
}

type CouponsWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Coupon!]!
}

input CreateArticleInput {
  title: String!
  slug: String
  categoryIds: [Int!]
  user_id: Int
  description: String
  content: String
  status: Int!
}

input CreateAttachmentInput {
  uuid: String!
  title: String!
  alt: String!
  type: String!
  filename: String!
  moduleName: String!
  moduleId: Int!
  moduleType: String!
  ext: String!
  width: Int!
  height: Int!
  size: Int!
  path: String!
  external_url: String
  at2x: Int!
  in_local: Int!
  in_oss: Int!
  category_id: Int
  user_id: Int
  sort: Int!
  status: Int!
}

input CreateAxInput {
  title: String!
  slug: String!
  status: Int!
  description: String
}

input CreateCategoryInput {
  name: String!
  slug: String!
  parent_id: Int
  description: String
}

input CreateCouponInput {
  type: String!
  slug: String!
  quantity: Int!
  amount: Float!
  over_amount: Float
  available_product_ids: String
  unavailable_product_ids: String
  start_time: DateTime!
  expire_time: DateTime!
  status: Int!
}

input CreatePermissionInput {
  name: String!
  slug: String!
}

input CreateRoleInput {
  name: String!
  slug: String!
}

input CreateSettingInput {
  name: String!
  slug: String!
  value: String!
  type: String!
  description: String
  options: String
  sort: Int = 0
}

input CreateTagInput {
  name: String!
  icon: String
  description: String
}

input CreateUserInput {
  phone: String
  email: String!
  name: String
  password: String!
  status: Int
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type DeleteAttachmentsObject {
  items: [String!]!
}

type Mutation {
  createRole(role: CreateRoleInput!): Role!
  updateRole(role: UpdateRoleInput!, id: Int!): Role!
  deleteRole(id: Int!): Role!
  createPermission(permission: CreatePermissionInput!): Permission!
  updatePermission(permission: UpdatePermissionInput!, id: Int!): Permission!
  deletePermission(id: Int!): Permission!
  createUser(user: CreateUserInput!): User!
  updateUser(user: UpdateUserInput!, id: Int!): User!
  deleteUser(id: Int!): User!
  createArticle(article: CreateArticleInput!): Article!
  updateArticle(article: UpdateArticleInput!, id: Int!): Article!
  deleteArticle(id: Int!): Article!
  createCategory(category: CreateCategoryInput!): Category!
  updateCategory(category: UpdateCategoryInput!, id: Int!): Category!
  deleteCategory(id: Int!): Category!
  createAx(ax: CreateAxInput!): Ax!
  updateAx(ax: UpdateAxInput!, id: Int!): Ax!
  deleteAx(id: Int!): Ax!
  updateAttachment(attachment: UpdateAttachmentInput!, uuid: String!): Attachment!
  updateAttachments(attachments: [UpdateAttachmentsInput!]!): AttachmentsObject!
  deleteAttachments(uuid: [String!]!): DeleteAttachmentsObject!
  createSetting(setting: CreateSettingInput!): Setting!
  updateSetting(setting: UpdateSettingInput!, id: Int!): Setting!
  updateSettings(settings: [UpdateSettingsInput!]!): SettingsObject!
  deleteSetting(id: Int!): Setting!
  login(user: AuthLoginInput!): User!
  loginByTicket(ticket: String!): User!
  signup(oid: Int, user: AuthSignupInput!): User!
  createTag(tag: CreateTagInput!): Tag!
  createTags(tagNames: [String!]!): Tag!
  syncTagsToDictFile: SyncTagsToFileObject!
  updateTag(tag: UpdateTagInput!, id: Int!): Tag!
  deleteTag(id: Int!): Tag!
  createCoupon(coupon: CreateCouponInput!): Coupon!
  updateCoupon(coupon: UpdateCouponInput!, id: Int!): Coupon!
  deleteCoupon(id: Int!): Coupon!
}

type Oauth {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  open_id: String!
  union_id: String
  app_id: String!
  user_id: Int!
  platform: String!
  ticket: String
  ticket_at: DateTime
  access_token: String
  refresh_token: String
  nickname: String!
  sex: Int!
  city: String!
  province: String!
  country: String!
  avatar_url: String!
  last_oauth_at: DateTime
}

type PaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
}

type Permission {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  name: String!
  slug: String!
  slugGroup: String!
  roles: [Role!]
}

type PermissionsWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Permission!]!
}

type Query {
  roles(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): RolesWithPaginationObject!
  role(id: Int!): Role!
  permissions(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): PermissionsWithPaginationObject!
  permission(id: Int!): Permission!
  ram: Float!
  users(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): UsersWithPaginationObject!
  user(id: Int!): User!
  userByToken(token: String): User!
  articles(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String, tagName: String, categoryName: String, categoryId: Int): ArticlesWithPaginationObject!
  article(id: Int!): Article!
  articleBySlug(slug: String!): Article!
  categories(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String, type: String = "list"): CategoriesWithPaginationObject!
  categoriesByTree: CategoriesWithTreeObject!
  category(id: Int!): Category!
  axs(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): AxsWithPaginationObject!
  ax(id: Int!): Ax!
  axBySlug(slug: String!): Ax!
  attachments(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String, type: String, moduleName: String, moduleId: Int, moduleType: String, category_id: Int, user_id: Int, refreshHash: Int): AttachmentsWithPaginationObject!
  attachment(uuid: String!): Attachment!
  settings(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): SettingsWithPaginationObject!
  setting(id: Int!): Setting!
  settingBySlug(slug: String!): Setting!
  tags(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): TagsWithPaginationObject!
  tag(id: Int!): Tag!
  tagByName(name: String!): Tag!
  coupons(page: Int = 1, pageSize: Int = 30, orderBy: String = "id", orderSort: String = "DESC", q: String): CouponsWithPaginationObject!
  coupon(id: Int!): Coupon!
}

type Role {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  name: String!
  slug: String!
  permissions: [Permission!]
  user: User
}

type RolesWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Role!]!
}

type Setting {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  name: String!
  slug: String
  type: String
  description: String
  options: String
  value: String
  sort: Int!
}

type SettingsObject {
  items: [Setting!]!
}

type SettingsWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Setting!]!
}

type SyncTagsToFileObject {
  status: String!
}

type Tag {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  name: String!
  icon: String
  description: String
  count: Int
}

type TagsWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [Tag!]!
}

input UpdateArticleInput {
  title: String!
  slug: String
  user_id: Int
  description: String
  content: String
  status: Int
  created_at: DateTime
  categoryIds: [Int!]
  tagIds: [Int!]
}

input UpdateAttachmentInput {
  title: String
  link: String
  sort: Int!
  status: Int!
  external_url: String
}

input UpdateAttachmentsInput {
  title: String
  link: String
  sort: Int!
  status: Int!
  external_url: String
  uuid: String!
}

input UpdateAxInput {
  title: String
  slug: String
  status: Int
  description: String
}

input UpdateCategoryInput {
  name: String!
  slug: String!
  parent_id: Int
  description: String
}

input UpdateCouponInput {
  start_time: DateTime
  expire_time: DateTime
  status: Int
}

input UpdatePermissionInput {
  name: String
  slug: String
}

input UpdateRoleInput {
  name: String
  slug: String
  permissionIds: [Int!]
  permissionSlugs: [String!]
}

input UpdateSettingInput {
  name: String
  slug: String
  type: String
  description: String
  value: String
  options: String
  sort: Int
}

input UpdateSettingsInput {
  id: Int!
  value: String!
}

input UpdateTagInput {
  name: String
  icon: String
  description: String
  read_count: Int
  link_count: Int
}

input UpdateUserInput {
  phone: String
  email: String
  name: String
  password: String
  status: Int
  roleIds: [Int!]
  roleSlugs: [String!]
}

type User {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  name: String
  phone: String
  email: String!
  status: Int!
  lastLogin_ip: String
  lastLogin_at: DateTime
  roles: [Role!]
  permissions: [Permission!]
  flatePermissions: [String!]
  authToken: String
  authExpiresIn: Int
}

type UsersWithPaginationObject {
  page: Int
  pageSize: Int!
  nextPage: Int
  itemsCount: Int!
  total: Int!
  items: [User!]!
}
